#trigger:
#- main

#pool:
#  vmImage: 'ubuntu-latest'

#stages:
#- stage: Build
#  jobs:
#  - job: BuildAndPush
#    steps:
#    - task: Docker@2
#      inputs:
#        command: 'buildAndPush'
#        repository: 'your-app'
#        dockerfile: 'Dockerfile'
#        containerRegistry: 'your-acr'

#- stage: Deploy
#  jobs:
#  - job: DeployToK8s
#    steps:
#    - task: KubernetesManifest@0
#      inputs:
#        action: 'deploy'
#        kubernetesServiceConnection: 'your-aks'


# azure-pipelines.yml (crear en la raíz de tu repositorio)
trigger:
- main  # o master, según tu rama principal

pool:
  name: 'Default'  # Pool donde está tu self-hosted agent
  demands:
  - agent.name -equals local-agent

variables:
  dockerRegistryServiceConnection: 'dockerhub-connection'
  imageRepository: 'trascendant/proyecto-redes'
  containerRegistry: 'docker.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    displayName: 'Build Docker Image'
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest
        repository: '$(imageRepository)'
    
    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        repository: '$(imageRepository)'
        tags: |
          $(tag)
          latest
        containerRegistry: '$(dockerRegistryServiceConnection)'

- stage: Deploy
  displayName: 'Deploy to Local'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy Application'
    steps:
    - script: |
        # Detener contenedor anterior si existe
        docker stop proyecto-redes || true
        docker rm proyecto-redes || true
        
        # Ejecutar nueva imagen
        docker run -d --name proyecto-redes -p 5000:5000 $(imageRepository):$(tag)
        
        # Verificar que esté corriendo
        sleep 10
        curl -f http://localhost:5000/health || exit 1
      displayName: 'Deploy New Container'