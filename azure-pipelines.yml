#trigger:
#- main

#pool:
#  vmImage: 'ubuntu-latest'

#stages:
#- stage: Build
#  jobs:
#  - job: BuildAndPush
#    steps:
#    - task: Docker@2
#      inputs:
#        command: 'buildAndPush'
#        repository: 'your-app'
#        dockerfile: 'Dockerfile'
#        containerRegistry: 'your-acr'

#- stage: Deploy
#  jobs:
#  - job: DeployToK8s
#    steps:
#    - task: KubernetesManifest@0
#      inputs:
#        action: 'deploy'
#        kubernetesServiceConnection: 'your-aks'


# Trigger automático en push a main
trigger:
- main
- develop

# Pool de agentes (máquinas virtuales de Microsoft)
pool:
  vmImage: 'ubuntu-latest'

# Variables del proyecto - CAMBIAR POR TUS VALORES
variables:
  
  containerRegistry: 'ProyectoeRedes.azurecr.io'  # Cambiar por tu ACR
  imageRepository: 'python-web-app'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Service connection names
  dockerRegistryServiceConnection: 'azure-container-registry'
  kubernetesServiceConnection: 'azure-kubernetes'

# Etapas del pipeline
stages:
# STAGE 1: BUILD - Construir y subir imagen Docker
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    displayName: 'Build Docker Image'
    steps:
    
    # Mostrar información del build
    - script: |
        echo "Building $(imageRepository):$(tag)"
        echo "Source branch: $(Build.SourceBranch)"
        echo "Commit: $(Build.SourceVersion)"
      displayName: 'Show build info'
    
    # Construir y subir imagen Docker
    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        command: 'buildAndPush'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        containerRegistry: '$(dockerRegistryServiceConnection)'
        tags: |
          $(tag)
          latest

    # Publicar manifiestos de Kubernetes para siguiente stage
    - publish: k8s
      artifact: k8s-manifests
      displayName: 'Publish Kubernetes manifests'

# STAGE 2: DEPLOY - Desplegar a Kubernetes
- stage: Deploy
  displayName: 'Deploy to Kubernetes'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to AKS'
    environment: 'production'  # Crear environment en Azure DevOps
    strategy:
      runOnce:
        deploy:
          steps:
          
          # Descargar artifacts del stage anterior
          - download: current
            artifact: k8s-manifests
            displayName: 'Download Kubernetes manifests'
          
          # Reemplazar imagen en manifiestos
          - task: replacetokens@5
            displayName: 'Replace image tag in manifests'
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/k8s-manifests'
              targetFiles: '**/*.yaml'
              encoding: 'auto'
              tokenPattern: 'default'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true
          
          # Aplicar manifiestos a Kubernetes
          - task: KubernetesManifest@0
            displayName: 'Deploy to Kubernetes cluster'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: '$(kubernetesServiceConnection)'
              namespace: 'default'
              manifests: |
                $(Pipeline.Workspace)/k8s-manifests/deployment.yaml
                $(Pipeline.Workspace)/k8s-manifests/service.yaml
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'

# STAGE 3: TEST - Verificar despliegue
- stage: Test
  displayName: 'Post-Deployment Tests'
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: SmokeTest
    displayName: 'Smoke Tests'
    steps:
    
    - script: |
        echo "Running post-deployment verification..."
        echo "Application should be available at the service endpoint"
        echo "Manual verification required in Azure portal"
      displayName: 'Smoke test placeholder'
