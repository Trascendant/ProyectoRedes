#trigger:
#- main

#pool:
#  vmImage: 'ubuntu-latest'

#stages:
#- stage: Build
#  jobs:
#  - job: BuildAndPush
#    steps:
#    - task: Docker@2
#      inputs:
#        command: 'buildAndPush'
#        repository: 'your-app'
#        dockerfile: 'Dockerfile'
#        containerRegistry: 'your-acr'

#- stage: Deploy
#  jobs:
#  - job: DeployToK8s
#    steps:
#    - task: KubernetesManifest@0
#      inputs:
#        action: 'deploy'
#        kubernetesServiceConnection: 'your-aks'



trigger:
- main
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  containerRegistry: 'ProyectoeRedes.azurecr.io'  # Tu ACR
  imageRepository: 'python-web-app'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'azure-container-registry'  # Tu service connection

stages:
# STAGE 1: BUILD - Solo construir y subir imagen
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    displayName: 'Build Docker Image'
    steps:
    
    # Mostrar información del build
    - script: |
        echo "Building $(imageRepository):$(tag)"
        echo "Source branch: $(Build.SourceBranch)"
        echo "Commit: $(Build.SourceVersion)"
        echo "Files in repository:"
        ls -la $(Build.SourcesDirectory)
      displayName: 'Show build info'
    
    # Construir y subir imagen Docker
    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        command: 'buildAndPush'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        containerRegistry: '$(dockerRegistryServiceConnection)'
        tags: |
          $(tag)
          latest
    
    # Verificar que la imagen se subió correctamente
    - script: |
        echo "✅ Docker image built and pushed successfully!"
        echo "Image: $(containerRegistry)/$(imageRepository):$(tag)"
        echo "Also tagged as: $(containerRegistry)/$(imageRepository):latest"
      displayName: 'Build completed'
